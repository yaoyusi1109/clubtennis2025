[
  {
    "objectID": "performance_analysis.html",
    "href": "performance_analysis.html",
    "title": "Performance Analytics",
    "section": "",
    "text": "This section is dedicated to improving player and team performance through advanced analytics."
  },
  {
    "objectID": "performance_analysis.html#a.-ladder-ranking-system",
    "href": "performance_analysis.html#a.-ladder-ranking-system",
    "title": "Performance Analytics",
    "section": "A. Ladder Ranking System",
    "text": "A. Ladder Ranking System\n\nObjective: Implement a modern, data-driven ranking system to foster competition and transparency.\nMethodology:\n\nData Collection: Gather historical match data, including challenge matches, tournaments, and practice sets.\nRanking Algorithm: Build a system based on Elo or Glicko-2, which accounts for opponent strength and match recency.\n\nDeliverable: A live dashboard for players and leadership to view current rankings and track progress."
  },
  {
    "objectID": "performance_analysis.html#b.-swing-vision-integration",
    "href": "performance_analysis.html#b.-swing-vision-integration",
    "title": "Performance Analytics",
    "section": "B. Swing Vision Integration",
    "text": "B. Swing Vision Integration\n\nObjective: Leverage Swing Vision technology to provide players with personalized performance feedback.\nProcess:\n\nData Extraction: Train players to record matches and extract key statistics (e.g., serve percentage, rally length, unforced errors, winners).\nFeedback Loop: Generate concise feedback reports that identify one key area for improvement for each player."
  },
  {
    "objectID": "performance_analysis.html#c.-doubles-pairing-analysis",
    "href": "performance_analysis.html#c.-doubles-pairing-analysis",
    "title": "Performance Analytics",
    "section": "C. Doubles Pairing Analysis",
    "text": "C. Doubles Pairing Analysis\n\nObjective: Use data to identify and recommend optimal doubles pairings.\nAnalysis:\n\nData Points: Combine Swing Vision stats and match results to evaluate team chemistry.\nMetrics: Analyze net vs. baseline play, serve/return dynamics, and overall win percentages for various pairings.\n\nOutcome: Provide data-backed recommendations for doubles teams in practices and tournaments."
  },
  {
    "objectID": "financial_analysis.html",
    "href": "financial_analysis.html",
    "title": "Financial Analysis",
    "section": "",
    "text": "This section focuses on strengthening the club’s financial health through data-driven strategies."
  },
  {
    "objectID": "financial_analysis.html#a.-historical-review",
    "href": "financial_analysis.html#a.-historical-review",
    "title": "Financial Analysis",
    "section": "A. Historical Review",
    "text": "A. Historical Review\n\nObjective: Analyze financial data from the last 2–3 years to understand revenue streams and spending habits.\nData Sources: Dues, parent contributions, Giving Day revenue, and historical costs for travel, gear, and other expenses.\nGoal: Identify spending patterns, highlight inefficiencies, and establish a financial baseline."
  },
  {
    "objectID": "financial_analysis.html#b.-fundraising-strategy",
    "href": "financial_analysis.html#b.-fundraising-strategy",
    "title": "Financial Analysis",
    "section": "B. Fundraising Strategy",
    "text": "B. Fundraising Strategy\n\nObjective: Develop and execute a targeted fundraising plan to maximize revenue.\nKey Initiatives:\n\nGiving Day (Feb 19):\n\nLaunch dedicated campaigns for parents and players.\nActively monitor hourly leaderboards to capture prize bonuses.\n\nSecondary Streams:\n\nExplore opportunities for selling merchandise.\nOrganize tennis clinics for the community.\nDevelop an alumni outreach and donation program."
  },
  {
    "objectID": "financial_analysis.html#c.-budget-modeling",
    "href": "financial_analysis.html#c.-budget-modeling",
    "title": "Financial Analysis",
    "section": "C. Budget Modeling",
    "text": "C. Budget Modeling\n\nObjective: Create a dynamic and user-friendly tool for annual budget management.\nImplementation:\n\nTool: Develop a flexible budget model using either Google Sheets or an R Shiny dashboard.\nFeatures:\n\nProvide scenarios for different season types (e.g., travel-heavy vs. local-heavy).\nAutomate recommendations for allocating funds to entry fees, travel, and equipment."
  },
  {
    "objectID": "main.html",
    "href": "main.html",
    "title": "VT Club Tennis Project",
    "section": "",
    "text": "Welcome! This project has two primary goals:\n\nFinancial Analysis: To strengthen the club’s financial health through data-driven strategies.\nPerformance Analytics: To improve player and team performance using advanced analytics.\n\nYou can explore each of these sections through the navigation bar at the top of the page."
  },
  {
    "objectID": "historical_review.html",
    "href": "historical_review.html",
    "title": "Historical Review",
    "section": "",
    "text": "Financial Transaction Analysis\nThis section presents a dynamic analysis of the club’s financial activities. The underlying data is sourced directly from a real-time ledger maintained in Google Sheets. The visualizations herein are programmatically generated and will automatically update to reflect any modifications to the source ledger, ensuring continuous and accurate financial reporting.\n\n# Load necessary libraries\nlibrary(googlesheets4)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(stringr)\n\n# --- Authenticate and Load Data from Google Sheets ---\n# This allows the script to read a public sheet without requiring a login each time.\ngs4_deauth()\n\n# The URL of your Google Sheet\nsheet_url &lt;- \"https://docs.google.com/spreadsheets/d/1QUmtSwyRjy1oQ6fqXGbksyNcvsLl_8wC0t6PSgTduJ8/edit?usp=sharing\" \n\n# Read the data from the first sheet of your Google Sheet\nraw_data &lt;- read_sheet(sheet_url, sheet = 1)\n\n# Standardize column names for easier use\ncolnames(raw_data) &lt;- make.names(colnames(raw_data), unique = TRUE)\n\ncleaned_data &lt;- raw_data %&gt;%\n  # Ensure Date column is in Date format\n  mutate(Date = as.Date(Date)) %&gt;%\n  # Rename columns for clarity. The data is already clean.\n  rename(Amount_Num = Amount, Total_Num = Total) %&gt;%\n  # Add a transaction type column\n  mutate(Type = ifelse(Amount_Num &gt;= 0, \"Income\", \"Spending\")) %&gt;%\n  # Filter out any rows where key data is missing\n  filter(!is.na(Date) & !is.na(Amount_Num))\n\n# Filter out the beginning balance for the income/spending chart\ntransactions &lt;- cleaned_data %&gt;%\n  filter(Vendor != \"Beginning balance\")\n\n# --- Visualization 1: Balance Over Time ---\nggplot(cleaned_data, aes(x = Date, y = Total_Num)) +\n  geom_line(color = \"#0073C2\", size = 1) +\n  geom_point(color = \"#0073C2\", size = 3) +\n  scale_y_continuous(labels = dollar_format()) +\n  labs(\n    title = \"Club Balance Over Time (2024-2025)\",\n    x = \"Date\",\n    y = \"Total Balance\"\n  ) +\n  theme_minimal(base_size = 14)\n\n\n\n\n\n\n\n# --- Visualization 2: Income vs. Spending ---\nggplot(transactions, aes(x = Date, y = Amount_Num, fill = Type)) +\n  geom_col(position = \"identity\") +\n  scale_fill_manual(values = c(\"Income\" = \"#4CAF50\", \"Spending\" = \"#F44336\")) +\n  scale_y_continuous(labels = dollar_format()) +\n  geom_hline(yintercept = 0, linetype = \"dashed\") +\n  labs(\n    title = \"Income and Spending Transactions\",\n    x = \"Date\",\n    y = \"Amount\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(legend.title = element_blank())\n\n\n\n\n\n\n\n# --- Spending Pie Chart ---\n# Step 1: Isolate and categorize spending data.\nspending_categorized &lt;- cleaned_data %&gt;%\n  filter(Amount_Num &lt; 0) %&gt;%\n  mutate(\n    Category = case_when(\n      str_detect(Description, regex(\"trip|rooms|Inn|Suites|van|Hotel\", ignore_case = TRUE)) ~ \"Travel & Lodging\",\n      str_detect(Description, regex(\"Balls|Uniforms|Merch\", ignore_case = TRUE))           ~ \"Equipment & Gear\",\n      str_detect(Description, regex(\"Bagels|food\", ignore_case = TRUE))                    ~ \"Food & Refreshments\",\n      str_detect(Description, regex(\"Entry Fee|registration|Championship\", ignore_case = TRUE)) ~ \"Tournament & Entry Fees\",\n      str_detect(Description, regex(\"Certs|CPRO\", ignore_case = TRUE))                      ~ \"Training & Certification\",\n      str_detect(Description, regex(\"Indoor Courts\", ignore_case = TRUE))                  ~ \"Facility Rental\",\n      TRUE                                                                                 ~ \"Miscellaneous\"\n    ),\n    Spending = abs(Amount_Num)\n  )\n\n# Step 2: Summarize data for the pie chart.\nspending_summary &lt;- spending_categorized %&gt;%\n  group_by(Category) %&gt;%\n  summarise(TotalSpending = sum(Spending)) %&gt;%\n  mutate(Percentage = TotalSpending / sum(TotalSpending) * 100)\n\n# Step 3: Create the pie chart.\nggplot(spending_summary, aes(x = \"\", y = TotalSpending, fill = Category)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(\"y\", start = 0) +\n  geom_text(aes(label = paste0(round(Percentage), \"%\\n\", \"(\", dollar(TotalSpending), \")\")), \n            position = position_stack(vjust = 0.5), \n            color = \"white\", \n            size = 3.5) +\n  labs(\n    title = \"Spending Distribution by Category\",\n    fill = \"Spending Category\"\n  ) +\n  theme_void() +\n  theme(plot.title = element_text(hjust = 0.5, size = 16))"
  }
]